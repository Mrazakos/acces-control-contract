/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AccessControlOptimized,
  AccessControlOptimizedInterface,
} from "../../contracts/AccessControlOptimized";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotLockOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicKeyEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicKeyTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "SameOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureAlreadyRevoked",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyRevokedSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pauser",
        type: "address",
      },
    ],
    name: "ContractPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "unpauser",
        type: "address",
      },
    ],
    name: "ContractUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "LockOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lockOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "LockRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "revoker",
        type: "address",
      },
    ],
    name: "SignatureRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PUBLIC_KEY_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_REVOKED_SIGNATURES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
    ],
    name: "batchRevokeSignatures",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "emergencyTransferLockOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getLockInfo",
    outputs: [
      {
        internalType: "address",
        name: "lockOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "revokedCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getLockOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getPublicKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getRevokedSignatureCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalLocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "signature",
        type: "string",
      },
    ],
    name: "isSignatureRevoked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "lockExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "revokedCount",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "registerLock",
    outputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "signature",
        type: "string",
      },
    ],
    name: "revokeSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "revokedSignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferLockOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260008060006101000a81548160ff021916908315150217905550600160045534801561002f57600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161248b610094600039600081816109e80152818161125e015281816113420152611579015261248b6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063861fc2fc116100ad578063c9102afd11610071578063c9102afd1461030b578063cffd99a21461033e578063f4dadc611461036e578063f523277f146103a0578063f8d87536146103d05761012c565b8063861fc2fc146102655780638da5cb5b146102815780638f22d8c21461029f57806394c93b47146102cf578063c5effff4146102ed5761012c565b80635c975abb116100f45780635c975abb146101c157806360dd4a62146101df5780636bbbf82e146101fb57806375d2c1ce1461022b5780638456cb591461025b5761012c565b80632441bca3146101315780632f7aafa01461016157806339933cf81461017d5780633f4ba83a1461019b5780635a04fb69146101a5575b600080fd5b61014b600480360381019061014691906119fa565b610400565b6040516101589190611a60565b60405180910390f35b61017b60048036038101906101769190611afd565b610639565b005b6101856109e0565b6040516101929190611a60565b60405180910390f35b6101a36109e6565b005b6101bf60048036038101906101ba9190611bbb565b610aca565b005b6101c9610dc3565b6040516101d69190611c16565b60405180910390f35b6101f960048036038101906101f49190611c31565b610dd4565b005b61021560048036038101906102109190611c31565b611107565b6040516102229190611c16565b60405180910390f35b61024560048036038101906102409190611c91565b61115b565b6040516102529190611d4e565b60405180910390f35b61026361125c565b005b61027f600480360381019061027a9190611bbb565b611340565b005b610289611577565b6040516102969190611d7f565b60405180910390f35b6102b960048036038101906102b49190611dd0565b61159b565b6040516102c69190611c16565b60405180910390f35b6102d76115ca565b6040516102e49190611a60565b60405180910390f35b6102f56115e0565b6040516103029190611a60565b60405180910390f35b61032560048036038101906103209190611c91565b6115e6565b6040516103359493929190611e10565b60405180910390f35b61035860048036038101906103539190611c91565b6117c9565b6040516103659190611c16565b60405180910390f35b61038860048036038101906103839190611c91565b6117f6565b60405161039793929190611e7b565b60405180910390f35b6103ba60048036038101906103b59190611c91565b61185d565b6040516103c79190611d7f565b60405180910390f35b6103ea60048036038101906103e59190611c91565b6118f9565b6040516103f79190611a60565b60405180910390f35b60008060009054906101000a900460ff1615610448576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008383905090506000810361048a576040517f9a890eb000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102008111156104c6576040517f450bc0a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008154809291906104d990611ee1565b91905055915060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001600063ffffffff168152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548163ffffffff021916908363ffffffff16021790555090505083836002600085815260200190815260200160002091826105e092919061216f565b503373ffffffffffffffffffffffffffffffffffffffff16827f43e758f3303d544b9f4955df32d2d92c8084e956faec5685757b35bc6c34f84b868660405161062a92919061227b565b60405180910390a35092915050565b60008054906101000a900460ff161561067e576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826001600082815260200190815260200160002060000160149054906101000a900460ff166106d9576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610775576040517f8e5693a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000878152602001908152602001600020905060008585905090506103e8818360000160159054906101000a900463ffffffff1663ffffffff166107bd919061229f565b11156107f5576040517f4ccce41800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b82811015610994576000888883818110610816576108156122d3565b5b90506020028101906108289190612311565b905003610861576040517fcc628d9100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878782818110610874576108736122d3565b5b90506020028101906108869190612311565b6040516108949291906123a4565b60405180910390209150600360008a8152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff1615610907576040517f409f8c6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360008b8152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16828a7f6aafae7433d8bb4c5fa5379b396b5fd6fae3dae9fbb1b60de92f4b7c48bdf35460405160405180910390a48060010190506107f9565b50818360000160158282829054906101000a900463ffffffff166109b891906123bd565b92506101000a81548163ffffffff021916908363ffffffff1602179055505050505050505050565b6103e881565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6b576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f5b65b0c1363b3003db9bcc5e1fd8805a6d6bf5bf6dc9d3431ee4494cd7d1176660405160405180910390a2565b60008054906101000a900460ff1615610b0f576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816001600082815260200190815260200160002060000160149054906101000a900460ff16610b6a576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b823373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c06576040517f8e5693a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c6c576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d0c576040517f2a63c7cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836001600087815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16867f94cb47eeeeb76a68c4d24f7c656bc9e63d5bc82211fc7784b33e438103b2f87360405160405180910390a45050505050565b60008054906101000a900460ff1681565b60008054906101000a900460ff1615610e19576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826001600082815260200190815260200160002060000160149054906101000a900460ff16610e74576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f10576040517f8e5693a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484905003610f4d576040517fcc628d9100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600087815260200190815260200160002090506103e88160000160159054906101000a900463ffffffff1663ffffffff1610610fb9576040517f4ccce41800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008585604051610fcb9291906123a4565b6040518091039020905060036000888152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff161561103e576040517f409f8c6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160036000898152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001601581819054906101000a900463ffffffff1661109b906123f5565b91906101000a81548163ffffffff021916908363ffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1681887f6aafae7433d8bb4c5fa5379b396b5fd6fae3dae9fbb1b60de92f4b7c48bdf35460405160405180910390a450505050505050565b6000600360008581526020019081526020016000206000848460405161112e9291906123a4565b6040518091039020815260200190815260200160002060009054906101000a900460ff1690509392505050565b6060816001600082815260200190815260200160002060000160149054906101000a900460ff166111b8576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600084815260200190815260200160002080546111d690611f92565b80601f016020809104026020016040519081016040528092919081815260200182805461120290611f92565b801561124f5780601f106112245761010080835404028352916020019161124f565b820191906000526020600020905b81548152906001019060200180831161123257829003601f168201915b5050505050915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112e1576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000806101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f81990fd9a5c552b8e3677917d8a03c07678f0d2cb68f88b634aca2022e9bd19f60405160405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113c5576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816001600082815260200190815260200160002060000160149054906101000a900460ff16611420576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611486576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600086815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16857f94cb47eeeeb76a68c4d24f7c656bc9e63d5bc82211fc7784b33e438103b2f87360405160405180910390a450505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600060016004546115db9190612421565b905090565b61020081565b60006060600080846001600082815260200190815260200160002060000160149054906101000a900460ff16611648576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008881526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016000820160159054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090508060000151600260008981526020019081526020016000208260400151836020015182805461172f90611f92565b80601f016020809104026020016040519081016040528092919081815260200182805461175b90611f92565b80156117a85780601f1061177d576101008083540402835291602001916117a8565b820191906000526020600020905b81548152906001019060200180831161178b57829003601f168201915b505050505092508163ffffffff169150955095509550955050509193509193565b60006001600083815260200190815260200160002060000160149054906101000a900460ff169050919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900463ffffffff16905083565b6000816001600082815260200190815260200160002060000160149054906101000a900460ff166118ba576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000816001600082815260200190815260200160002060000160149054906101000a900460ff16611956576040517fc10ddcde00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600084815260200190815260200160002060000160159054906101000a900463ffffffff1663ffffffff16915050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126119ba576119b9611995565b5b8235905067ffffffffffffffff8111156119d7576119d661199a565b5b6020830191508360018202830111156119f3576119f261199f565b5b9250929050565b60008060208385031215611a1157611a1061198b565b5b600083013567ffffffffffffffff811115611a2f57611a2e611990565b5b611a3b858286016119a4565b92509250509250929050565b6000819050919050565b611a5a81611a47565b82525050565b6000602082019050611a756000830184611a51565b92915050565b611a8481611a47565b8114611a8f57600080fd5b50565b600081359050611aa181611a7b565b92915050565b60008083601f840112611abd57611abc611995565b5b8235905067ffffffffffffffff811115611ada57611ad961199a565b5b602083019150836020820283011115611af657611af561199f565b5b9250929050565b600080600060408486031215611b1657611b1561198b565b5b6000611b2486828701611a92565b935050602084013567ffffffffffffffff811115611b4557611b44611990565b5b611b5186828701611aa7565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b8882611b5d565b9050919050565b611b9881611b7d565b8114611ba357600080fd5b50565b600081359050611bb581611b8f565b92915050565b60008060408385031215611bd257611bd161198b565b5b6000611be085828601611a92565b9250506020611bf185828601611ba6565b9150509250929050565b60008115159050919050565b611c1081611bfb565b82525050565b6000602082019050611c2b6000830184611c07565b92915050565b600080600060408486031215611c4a57611c4961198b565b5b6000611c5886828701611a92565b935050602084013567ffffffffffffffff811115611c7957611c78611990565b5b611c85868287016119a4565b92509250509250925092565b600060208284031215611ca757611ca661198b565b5b6000611cb584828501611a92565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cf8578082015181840152602081019050611cdd565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d2082611cbe565b611d2a8185611cc9565b9350611d3a818560208601611cda565b611d4381611d04565b840191505092915050565b60006020820190508181036000830152611d688184611d15565b905092915050565b611d7981611b7d565b82525050565b6000602082019050611d946000830184611d70565b92915050565b6000819050919050565b611dad81611d9a565b8114611db857600080fd5b50565b600081359050611dca81611da4565b92915050565b60008060408385031215611de757611de661198b565b5b6000611df585828601611a92565b9250506020611e0685828601611dbb565b9150509250929050565b6000608082019050611e256000830187611d70565b8181036020830152611e378186611d15565b9050611e466040830185611a51565b611e536060830184611c07565b95945050505050565b600063ffffffff82169050919050565b611e7581611e5c565b82525050565b6000606082019050611e906000830186611d70565b611e9d6020830185611c07565b611eaa6040830184611e6c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611eec82611a47565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f1e57611f1d611eb2565b5b600182019050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611faa57607f821691505b602082108103611fbd57611fbc611f63565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026120257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611fe8565b61202f8683611fe8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061206c61206761206284611a47565b612047565b611a47565b9050919050565b6000819050919050565b61208683612051565b61209a61209282612073565b848454611ff5565b825550505050565b600090565b6120af6120a2565b6120ba81848461207d565b505050565b5b818110156120de576120d36000826120a7565b6001810190506120c0565b5050565b601f821115612123576120f481611fc3565b6120fd84611fd8565b8101602085101561210c578190505b61212061211885611fd8565b8301826120bf565b50505b505050565b600082821c905092915050565b600061214660001984600802612128565b1980831691505092915050565b600061215f8383612135565b9150826002028217905092915050565b6121798383611f29565b67ffffffffffffffff81111561219257612191611f34565b5b61219c8254611f92565b6121a78282856120e2565b6000601f8311600181146121d657600084156121c4578287013590505b6121ce8582612153565b865550612236565b601f1984166121e486611fc3565b60005b8281101561220c578489013582556001820191506020850194506020810190506121e7565b868310156122295784890135612225601f891682612135565b8355505b6001600288020188555050505b50505050505050565b82818337600083830152505050565b600061225a8385611cc9565b935061226783858461223f565b61227083611d04565b840190509392505050565b6000602082019050818103600083015261229681848661224e565b90509392505050565b60006122aa82611a47565b91506122b583611a47565b92508282019050808211156122cd576122cc611eb2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261232e5761232d612302565b5b80840192508235915067ffffffffffffffff8211156123505761234f612307565b5b60208301925060018202360383131561236c5761236b61230c565b5b509250929050565b600081905092915050565b600061238b8385612374565b935061239883858461223f565b82840190509392505050565b60006123b182848661237f565b91508190509392505050565b60006123c882611e5c565b91506123d383611e5c565b9250828201905063ffffffff8111156123ef576123ee611eb2565b5b92915050565b600061240082611e5c565b915063ffffffff820361241657612415611eb2565b5b600182019050919050565b600061242c82611a47565b915061243783611a47565b925082820390508181111561244f5761244e611eb2565b5b9291505056fea264697066735822122048974fdd1914be45c6886881bd069d221ebdb29ae58c2cfbb363686e043c6a7664736f6c63430008130033";

type AccessControlOptimizedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlOptimizedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlOptimized__factory extends ContractFactory {
  constructor(...args: AccessControlOptimizedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessControlOptimized> {
    return super.deploy(overrides || {}) as Promise<AccessControlOptimized>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessControlOptimized {
    return super.attach(address) as AccessControlOptimized;
  }
  override connect(signer: Signer): AccessControlOptimized__factory {
    return super.connect(signer) as AccessControlOptimized__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlOptimizedInterface {
    return new utils.Interface(_abi) as AccessControlOptimizedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlOptimized {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlOptimized;
  }
}
